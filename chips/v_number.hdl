inputs a_sf1_0, a_sf1_1, a_sf1_2, a_sf1_3, a_sf1_4, a_sf1_5,
       a_sf2_0, a_sf2_1, a_sf2_2, a_sf2_3,
       b_sf1_0, b_sf1_1, b_sf1_2, b_sf1_3, b_sf1_4, b_sf1_5,
       b_sf2_0, b_sf2_1, b_sf2_2, b_sf2_3,
       c_sf1_0, c_sf1_1, c_sf1_2, c_sf1_3, c_sf1_4, c_sf1_5,
       c_sf2_0, c_sf2_1, c_sf2_2, c_sf2_3,
       d_sf1_0, d_sf1_1, d_sf1_2, d_sf1_3, d_sf1_4, d_sf1_5,
       d_sf2_0, d_sf2_1, d_sf2_2, d_sf2_3,
       e_sf1_0, e_sf1_1, e_sf1_2, e_sf1_3, e_sf1_4, e_sf1_5,
       e_sf2_0, e_sf2_1, e_sf2_2, e_sf2_3,
       f_sf1_0, f_sf1_1, f_sf1_2, f_sf1_3, f_sf1_4, f_sf1_5,
       f_sf2_0, f_sf2_1, f_sf2_2, f_sf2_3,
       g_sf1_0, g_sf1_1, g_sf1_2, g_sf1_3, g_sf1_4, g_sf1_5,
       g_sf2_0, g_sf2_1, g_sf2_2, g_sf2_3,
       h_sf1_0, h_sf1_1, h_sf1_2, h_sf1_3, h_sf1_4, h_sf1_5,
       h_sf2_0, h_sf2_1, h_sf2_2, h_sf2_3,
       i_sf1_0, i_sf1_1, i_sf1_2, i_sf1_3, i_sf1_4, i_sf1_5,
       i_sf2_0, i_sf2_1, i_sf2_2, i_sf2_3,
       j_sf1_0, j_sf1_1, j_sf1_2, j_sf1_3, j_sf1_4, j_sf1_5,
       j_sf2_0, j_sf2_1, j_sf2_2, j_sf2_3,
       k_sf1_0, k_sf1_1, k_sf1_2, k_sf1_3, k_sf1_4, k_sf1_5,
       k_sf2_0, k_sf2_1, k_sf2_2, k_sf2_3,
       l_sf1_0, l_sf1_1, l_sf1_2, l_sf1_3, l_sf1_4, l_sf1_5,
       l_sf2_0, l_sf2_1, l_sf2_2, l_sf2_3,
       m_sf1_0, m_sf1_1, m_sf1_2, m_sf1_3, m_sf1_4, m_sf1_5,
       m_sf2_0, m_sf2_1, m_sf2_2, m_sf2_3,
       n_sf1_0, n_sf1_1, n_sf1_2, n_sf1_3, n_sf1_4, n_sf1_5,
       n_sf2_0, n_sf2_1, n_sf2_2, n_sf2_3,
       o_sf1_0, o_sf1_1, o_sf1_2, o_sf1_3, o_sf1_4, o_sf1_5,
       o_sf2_0, o_sf2_1, o_sf2_2, o_sf2_3,
       p_sf1_0, p_sf1_1, p_sf1_2, p_sf1_3, p_sf1_4, p_sf1_5,
       p_sf2_0, p_sf2_1, p_sf2_2, p_sf2_3,
       q_sf1_0, q_sf1_1, q_sf1_2, q_sf1_3, q_sf1_4, q_sf1_5,
       q_sf2_0, q_sf2_1, q_sf2_2, q_sf2_3,
       r_sf1_0, r_sf1_1, r_sf1_2, r_sf1_3, r_sf1_4, r_sf1_5,
       r_sf2_0, r_sf2_1, r_sf2_2, r_sf2_3,
       s_sf1_0, s_sf1_1, s_sf1_2, s_sf1_3, s_sf1_4, s_sf1_5,
       s_sf2_0, s_sf2_1, s_sf2_2, s_sf2_3,
       t_sf1_0, t_sf1_1, t_sf1_2, t_sf1_3, t_sf1_4, t_sf1_5,
       t_sf2_0, t_sf2_1, t_sf2_2, t_sf2_3,
       u_sf1_0, u_sf1_1, u_sf1_2, u_sf1_3, u_sf1_4, u_sf1_5,
       u_sf2_0, u_sf2_1, u_sf2_2, u_sf2_3,
       v_sf1_0, v_sf1_1, v_sf1_2, v_sf1_3, v_sf1_4, v_sf1_5,
       v_sf2_0, v_sf2_1, v_sf2_2, v_sf2_3,
       w_sf1_0, w_sf1_1, w_sf1_2, w_sf1_3, w_sf1_4, w_sf1_5,
       w_sf2_0, w_sf2_1, w_sf2_2, w_sf2_3,
       x_sf1_0, x_sf1_1, x_sf1_2, x_sf1_3, x_sf1_4, x_sf1_5,
       x_sf2_0, x_sf2_1, x_sf2_2, x_sf2_3,
       y_sf1_0, y_sf1_1, y_sf1_2, y_sf1_3, y_sf1_4, y_sf1_5,
       y_sf2_0, y_sf2_1, y_sf2_2, y_sf2_3,
       z_sf1_0, z_sf1_1, z_sf1_2, z_sf1_3, z_sf1_4, z_sf1_5,
       z_sf2_0, z_sf2_1, z_sf2_2, z_sf2_3

outputs sum0, sum1, sum2, sum3, sum4, sum5,
        sum6, sum7, sum8, sum9, sum10, sum11,
        dps24_0, dps24_1, dps24_2, dps24_3, dps24_4, dps24_5

# Check if the second-significant figure is zero.

is_zero(i0=a_sf2_0, i1=a_sf2_1, i2=a_sf2_2, i3=a_sf2_3, out=a_sf2_zero)
is_zero(i0=b_sf2_0, i1=b_sf2_1, i2=b_sf2_2, i3=b_sf2_3, out=b_sf2_zero)
is_zero(i0=c_sf2_0, i1=c_sf2_1, i2=c_sf2_2, i3=c_sf2_3, out=c_sf2_zero)
is_zero(i0=d_sf2_0, i1=d_sf2_1, i2=d_sf2_2, i3=d_sf2_3, out=d_sf2_zero)
is_zero(i0=e_sf2_0, i1=e_sf2_1, i2=e_sf2_2, i3=e_sf2_3, out=e_sf2_zero)
is_zero(i0=f_sf2_0, i1=f_sf2_1, i2=f_sf2_2, i3=f_sf2_3, out=f_sf2_zero)
is_zero(i0=g_sf2_0, i1=g_sf2_1, i2=g_sf2_2, i3=g_sf2_3, out=g_sf2_zero)
is_zero(i0=h_sf2_0, i1=h_sf2_1, i2=h_sf2_2, i3=h_sf2_3, out=h_sf2_zero)
is_zero(i0=i_sf2_0, i1=i_sf2_1, i2=i_sf2_2, i3=i_sf2_3, out=i_sf2_zero)
is_zero(i0=j_sf2_0, i1=j_sf2_1, i2=j_sf2_2, i3=j_sf2_3, out=j_sf2_zero)
is_zero(i0=k_sf2_0, i1=k_sf2_1, i2=k_sf2_2, i3=k_sf2_3, out=k_sf2_zero)
is_zero(i0=l_sf2_0, i1=l_sf2_1, i2=l_sf2_2, i3=l_sf2_3, out=l_sf2_zero)
is_zero(i0=m_sf2_0, i1=m_sf2_1, i2=m_sf2_2, i3=m_sf2_3, out=m_sf2_zero)
is_zero(i0=n_sf2_0, i1=n_sf2_1, i2=n_sf2_2, i3=n_sf2_3, out=n_sf2_zero)
is_zero(i0=o_sf2_0, i1=o_sf2_1, i2=o_sf2_2, i3=o_sf2_3, out=o_sf2_zero)
is_zero(i0=p_sf2_0, i1=p_sf2_1, i2=p_sf2_2, i3=p_sf2_3, out=p_sf2_zero)
is_zero(i0=q_sf2_0, i1=q_sf2_1, i2=q_sf2_2, i3=q_sf2_3, out=q_sf2_zero)
is_zero(i0=r_sf2_0, i1=r_sf2_1, i2=r_sf2_2, i3=r_sf2_3, out=r_sf2_zero)
is_zero(i0=s_sf2_0, i1=s_sf2_1, i2=s_sf2_2, i3=s_sf2_3, out=s_sf2_zero)
is_zero(i0=t_sf2_0, i1=t_sf2_1, i2=t_sf2_2, i3=t_sf2_3, out=t_sf2_zero)
is_zero(i0=u_sf2_0, i1=u_sf2_1, i2=u_sf2_2, i3=u_sf2_3, out=u_sf2_zero)
is_zero(i0=v_sf2_0, i1=v_sf2_1, i2=v_sf2_2, i3=v_sf2_3, out=v_sf2_zero)
is_zero(i0=w_sf2_0, i1=w_sf2_1, i2=w_sf2_2, i3=w_sf2_3, out=w_sf2_zero)
is_zero(i0=x_sf2_0, i1=x_sf2_1, i2=x_sf2_2, i3=x_sf2_3, out=x_sf2_zero)
is_zero(i0=y_sf2_0, i1=y_sf2_1, i2=y_sf2_2, i3=y_sf2_3, out=y_sf2_zero)
is_zero(i0=z_sf2_0, i1=z_sf2_1, i2=z_sf2_2, i3=z_sf2_3, out=z_sf2_zero)

# Lookup the words from the first-significant figure:

v_lookup(i0=a_sf1_0, i1=a_sf1_1, i2=a_sf1_2, i3=a_sf1_3, i4=a_sf1_4, i5=a_sf1_5, o0=sum_a_sf1_0, o1=sum_a_sf1_1, o2=sum_a_sf1_2)
v_lookup(i0=b_sf1_0, i1=b_sf1_1, i2=b_sf1_2, i3=b_sf1_3, i4=b_sf1_4, i5=b_sf1_5, o0=sum_b_sf1_0, o1=sum_b_sf1_1, o2=sum_b_sf1_2)
v_lookup(i0=c_sf1_0, i1=c_sf1_1, i2=c_sf1_2, i3=c_sf1_3, i4=c_sf1_4, i5=c_sf1_5, o0=sum_c_sf1_0, o1=sum_c_sf1_1, o2=sum_c_sf1_2)
v_lookup(i0=d_sf1_0, i1=d_sf1_1, i2=d_sf1_2, i3=d_sf1_3, i4=d_sf1_4, i5=d_sf1_5, o0=sum_d_sf1_0, o1=sum_d_sf1_1, o2=sum_d_sf1_2)
v_lookup(i0=e_sf1_0, i1=e_sf1_1, i2=e_sf1_2, i3=e_sf1_3, i4=e_sf1_4, i5=e_sf1_5, o0=sum_e_sf1_0, o1=sum_e_sf1_1, o2=sum_e_sf1_2)
v_lookup(i0=f_sf1_0, i1=f_sf1_1, i2=f_sf1_2, i3=f_sf1_3, i4=f_sf1_4, i5=f_sf1_5, o0=sum_f_sf1_0, o1=sum_f_sf1_1, o2=sum_f_sf1_2)
v_lookup(i0=g_sf1_0, i1=g_sf1_1, i2=g_sf1_2, i3=g_sf1_3, i4=g_sf1_4, i5=g_sf1_5, o0=sum_g_sf1_0, o1=sum_g_sf1_1, o2=sum_g_sf1_2)
v_lookup(i0=h_sf1_0, i1=h_sf1_1, i2=h_sf1_2, i3=h_sf1_3, i4=h_sf1_4, i5=h_sf1_5, o0=sum_h_sf1_0, o1=sum_h_sf1_1, o2=sum_h_sf1_2)
v_lookup(i0=i_sf1_0, i1=i_sf1_1, i2=i_sf1_2, i3=i_sf1_3, i4=i_sf1_4, i5=i_sf1_5, o0=sum_i_sf1_0, o1=sum_i_sf1_1, o2=sum_i_sf1_2)
v_lookup(i0=j_sf1_0, i1=j_sf1_1, i2=j_sf1_2, i3=j_sf1_3, i4=j_sf1_4, i5=j_sf1_5, o0=sum_j_sf1_0, o1=sum_j_sf1_1, o2=sum_j_sf1_2)
v_lookup(i0=k_sf1_0, i1=k_sf1_1, i2=k_sf1_2, i3=k_sf1_3, i4=k_sf1_4, i5=k_sf1_5, o0=sum_k_sf1_0, o1=sum_k_sf1_1, o2=sum_k_sf1_2)
v_lookup(i0=l_sf1_0, i1=l_sf1_1, i2=l_sf1_2, i3=l_sf1_3, i4=l_sf1_4, i5=l_sf1_5, o0=sum_l_sf1_0, o1=sum_l_sf1_1, o2=sum_l_sf1_2)
v_lookup(i0=m_sf1_0, i1=m_sf1_1, i2=m_sf1_2, i3=m_sf1_3, i4=m_sf1_4, i5=m_sf1_5, o0=sum_m_sf1_0, o1=sum_m_sf1_1, o2=sum_m_sf1_2)
v_lookup(i0=n_sf1_0, i1=n_sf1_1, i2=n_sf1_2, i3=n_sf1_3, i4=n_sf1_4, i5=n_sf1_5, o0=sum_n_sf1_0, o1=sum_n_sf1_1, o2=sum_n_sf1_2)
v_lookup(i0=o_sf1_0, i1=o_sf1_1, i2=o_sf1_2, i3=o_sf1_3, i4=o_sf1_4, i5=o_sf1_5, o0=sum_o_sf1_0, o1=sum_o_sf1_1, o2=sum_o_sf1_2)
v_lookup(i0=p_sf1_0, i1=p_sf1_1, i2=p_sf1_2, i3=p_sf1_3, i4=p_sf1_4, i5=p_sf1_5, o0=sum_p_sf1_0, o1=sum_p_sf1_1, o2=sum_p_sf1_2)
v_lookup(i0=q_sf1_0, i1=q_sf1_1, i2=q_sf1_2, i3=q_sf1_3, i4=q_sf1_4, i5=q_sf1_5, o0=sum_q_sf1_0, o1=sum_q_sf1_1, o2=sum_q_sf1_2)
v_lookup(i0=r_sf1_0, i1=r_sf1_1, i2=r_sf1_2, i3=r_sf1_3, i4=r_sf1_4, i5=r_sf1_5, o0=sum_r_sf1_0, o1=sum_r_sf1_1, o2=sum_r_sf1_2)
v_lookup(i0=s_sf1_0, i1=s_sf1_1, i2=s_sf1_2, i3=s_sf1_3, i4=s_sf1_4, i5=s_sf1_5, o0=sum_s_sf1_0, o1=sum_s_sf1_1, o2=sum_s_sf1_2)
v_lookup(i0=t_sf1_0, i1=t_sf1_1, i2=t_sf1_2, i3=t_sf1_3, i4=t_sf1_4, i5=t_sf1_5, o0=sum_t_sf1_0, o1=sum_t_sf1_1, o2=sum_t_sf1_2)
v_lookup(i0=u_sf1_0, i1=u_sf1_1, i2=u_sf1_2, i3=u_sf1_3, i4=u_sf1_4, i5=u_sf1_5, o0=sum_u_sf1_0, o1=sum_u_sf1_1, o2=sum_u_sf1_2)
v_lookup(i0=v_sf1_0, i1=v_sf1_1, i2=v_sf1_2, i3=v_sf1_3, i4=v_sf1_4, i5=v_sf1_5, o0=sum_v_sf1_0, o1=sum_v_sf1_1, o2=sum_v_sf1_2)
v_lookup(i0=w_sf1_0, i1=w_sf1_1, i2=w_sf1_2, i3=w_sf1_3, i4=w_sf1_4, i5=w_sf1_5, o0=sum_w_sf1_0, o1=sum_w_sf1_1, o2=sum_w_sf1_2)
v_lookup(i0=x_sf1_0, i1=x_sf1_1, i2=x_sf1_2, i3=x_sf1_3, i4=x_sf1_4, i5=x_sf1_5, o0=sum_x_sf1_0, o1=sum_x_sf1_1, o2=sum_x_sf1_2)
v_lookup(i0=y_sf1_0, i1=y_sf1_1, i2=y_sf1_2, i3=y_sf1_3, i4=y_sf1_4, i5=y_sf1_5, o0=sum_y_sf1_0, o1=sum_y_sf1_1, o2=sum_y_sf1_2)
v_lookup(i0=z_sf1_0, i1=z_sf1_1, i2=z_sf1_2, i3=z_sf1_3, i4=z_sf1_4, i5=z_sf1_5, o0=sum_z_sf1_0, o1=sum_z_sf1_1, o2=sum_z_sf1_2)

# Lookup the words from the second-significant figure:

v_lookup(i0=a_sf2_0, i1=a_sf2_1, i2=a_sf2_2, i3=a_sf2_3, i4=0, i5=0, o0=sum_a_sf2_0, o1=sum_a_sf2_1, o2=sum_a_sf2_2)
v_lookup(i0=b_sf2_0, i1=b_sf2_1, i2=b_sf2_2, i3=b_sf2_3, i4=0, i5=0, o0=sum_b_sf2_0, o1=sum_b_sf2_1, o2=sum_b_sf2_2)
v_lookup(i0=c_sf2_0, i1=c_sf2_1, i2=c_sf2_2, i3=c_sf2_3, i4=0, i5=0, o0=sum_c_sf2_0, o1=sum_c_sf2_1, o2=sum_c_sf2_2)
v_lookup(i0=d_sf2_0, i1=d_sf2_1, i2=d_sf2_2, i3=d_sf2_3, i4=0, i5=0, o0=sum_d_sf2_0, o1=sum_d_sf2_1, o2=sum_d_sf2_2)
v_lookup(i0=e_sf2_0, i1=e_sf2_1, i2=e_sf2_2, i3=e_sf2_3, i4=0, i5=0, o0=sum_e_sf2_0, o1=sum_e_sf2_1, o2=sum_e_sf2_2)
v_lookup(i0=f_sf2_0, i1=f_sf2_1, i2=f_sf2_2, i3=f_sf2_3, i4=0, i5=0, o0=sum_f_sf2_0, o1=sum_f_sf2_1, o2=sum_f_sf2_2)
v_lookup(i0=g_sf2_0, i1=g_sf2_1, i2=g_sf2_2, i3=g_sf2_3, i4=0, i5=0, o0=sum_g_sf2_0, o1=sum_g_sf2_1, o2=sum_g_sf2_2)
v_lookup(i0=h_sf2_0, i1=h_sf2_1, i2=h_sf2_2, i3=h_sf2_3, i4=0, i5=0, o0=sum_h_sf2_0, o1=sum_h_sf2_1, o2=sum_h_sf2_2)
v_lookup(i0=i_sf2_0, i1=i_sf2_1, i2=i_sf2_2, i3=i_sf2_3, i4=0, i5=0, o0=sum_i_sf2_0, o1=sum_i_sf2_1, o2=sum_i_sf2_2)
v_lookup(i0=j_sf2_0, i1=j_sf2_1, i2=j_sf2_2, i3=j_sf2_3, i4=0, i5=0, o0=sum_j_sf2_0, o1=sum_j_sf2_1, o2=sum_j_sf2_2)
v_lookup(i0=k_sf2_0, i1=k_sf2_1, i2=k_sf2_2, i3=k_sf2_3, i4=0, i5=0, o0=sum_k_sf2_0, o1=sum_k_sf2_1, o2=sum_k_sf2_2)
v_lookup(i0=l_sf2_0, i1=l_sf2_1, i2=l_sf2_2, i3=l_sf2_3, i4=0, i5=0, o0=sum_l_sf2_0, o1=sum_l_sf2_1, o2=sum_l_sf2_2)
v_lookup(i0=m_sf2_0, i1=m_sf2_1, i2=m_sf2_2, i3=m_sf2_3, i4=0, i5=0, o0=sum_m_sf2_0, o1=sum_m_sf2_1, o2=sum_m_sf2_2)
v_lookup(i0=n_sf2_0, i1=n_sf2_1, i2=n_sf2_2, i3=n_sf2_3, i4=0, i5=0, o0=sum_n_sf2_0, o1=sum_n_sf2_1, o2=sum_n_sf2_2)
v_lookup(i0=o_sf2_0, i1=o_sf2_1, i2=o_sf2_2, i3=o_sf2_3, i4=0, i5=0, o0=sum_o_sf2_0, o1=sum_o_sf2_1, o2=sum_o_sf2_2)
v_lookup(i0=p_sf2_0, i1=p_sf2_1, i2=p_sf2_2, i3=p_sf2_3, i4=0, i5=0, o0=sum_p_sf2_0, o1=sum_p_sf2_1, o2=sum_p_sf2_2)
v_lookup(i0=q_sf2_0, i1=q_sf2_1, i2=q_sf2_2, i3=q_sf2_3, i4=0, i5=0, o0=sum_q_sf2_0, o1=sum_q_sf2_1, o2=sum_q_sf2_2)
v_lookup(i0=r_sf2_0, i1=r_sf2_1, i2=r_sf2_2, i3=r_sf2_3, i4=0, i5=0, o0=sum_r_sf2_0, o1=sum_r_sf2_1, o2=sum_r_sf2_2)
v_lookup(i0=s_sf2_0, i1=s_sf2_1, i2=s_sf2_2, i3=s_sf2_3, i4=0, i5=0, o0=sum_s_sf2_0, o1=sum_s_sf2_1, o2=sum_s_sf2_2)
v_lookup(i0=t_sf2_0, i1=t_sf2_1, i2=t_sf2_2, i3=t_sf2_3, i4=0, i5=0, o0=sum_t_sf2_0, o1=sum_t_sf2_1, o2=sum_t_sf2_2)
v_lookup(i0=u_sf2_0, i1=u_sf2_1, i2=u_sf2_2, i3=u_sf2_3, i4=0, i5=0, o0=sum_u_sf2_0, o1=sum_u_sf2_1, o2=sum_u_sf2_2)
v_lookup(i0=v_sf2_0, i1=v_sf2_1, i2=v_sf2_2, i3=v_sf2_3, i4=0, i5=0, o0=sum_v_sf2_0, o1=sum_v_sf2_1, o2=sum_v_sf2_2)
v_lookup(i0=w_sf2_0, i1=w_sf2_1, i2=w_sf2_2, i3=w_sf2_3, i4=0, i5=0, o0=sum_w_sf2_0, o1=sum_w_sf2_1, o2=sum_w_sf2_2)
v_lookup(i0=x_sf2_0, i1=x_sf2_1, i2=x_sf2_2, i3=x_sf2_3, i4=0, i5=0, o0=sum_x_sf2_0, o1=sum_x_sf2_1, o2=sum_x_sf2_2)
v_lookup(i0=y_sf2_0, i1=y_sf2_1, i2=y_sf2_2, i3=y_sf2_3, i4=0, i5=0, o0=sum_y_sf2_0, o1=sum_y_sf2_1, o2=sum_y_sf2_2)
v_lookup(i0=z_sf2_0, i1=z_sf2_1, i2=z_sf2_2, i3=z_sf2_3, i4=0, i5=0, o0=sum_z_sf2_0, o1=sum_z_sf2_1, o2=sum_z_sf2_2)

# Remove the second-significant figure if it is zero:

mux(a=sum_a_sf2_0, b=0, sel=a_sf2_zero, out=add_a_sf2_0)
mux(a=sum_a_sf2_1, b=0, sel=a_sf2_zero, out=add_a_sf2_1)
mux(a=sum_a_sf2_2, b=0, sel=a_sf2_zero, out=add_a_sf2_2)
mux(a=sum_b_sf2_0, b=0, sel=b_sf2_zero, out=add_b_sf2_0)
mux(a=sum_b_sf2_1, b=0, sel=b_sf2_zero, out=add_b_sf2_1)
mux(a=sum_b_sf2_2, b=0, sel=b_sf2_zero, out=add_b_sf2_2)
mux(a=sum_c_sf2_0, b=0, sel=c_sf2_zero, out=add_c_sf2_0)
mux(a=sum_c_sf2_1, b=0, sel=c_sf2_zero, out=add_c_sf2_1)
mux(a=sum_c_sf2_2, b=0, sel=c_sf2_zero, out=add_c_sf2_2)
mux(a=sum_d_sf2_0, b=0, sel=d_sf2_zero, out=add_d_sf2_0)
mux(a=sum_d_sf2_1, b=0, sel=d_sf2_zero, out=add_d_sf2_1)
mux(a=sum_d_sf2_2, b=0, sel=d_sf2_zero, out=add_d_sf2_2)
mux(a=sum_e_sf2_0, b=0, sel=e_sf2_zero, out=add_e_sf2_0)
mux(a=sum_e_sf2_1, b=0, sel=e_sf2_zero, out=add_e_sf2_1)
mux(a=sum_e_sf2_2, b=0, sel=e_sf2_zero, out=add_e_sf2_2)
mux(a=sum_f_sf2_0, b=0, sel=f_sf2_zero, out=add_f_sf2_0)
mux(a=sum_f_sf2_1, b=0, sel=f_sf2_zero, out=add_f_sf2_1)
mux(a=sum_f_sf2_2, b=0, sel=f_sf2_zero, out=add_f_sf2_2)
mux(a=sum_g_sf2_0, b=0, sel=g_sf2_zero, out=add_g_sf2_0)
mux(a=sum_g_sf2_1, b=0, sel=g_sf2_zero, out=add_g_sf2_1)
mux(a=sum_g_sf2_2, b=0, sel=g_sf2_zero, out=add_g_sf2_2)
mux(a=sum_h_sf2_0, b=0, sel=h_sf2_zero, out=add_h_sf2_0)
mux(a=sum_h_sf2_1, b=0, sel=h_sf2_zero, out=add_h_sf2_1)
mux(a=sum_h_sf2_2, b=0, sel=h_sf2_zero, out=add_h_sf2_2)
mux(a=sum_i_sf2_0, b=0, sel=i_sf2_zero, out=add_i_sf2_0)
mux(a=sum_i_sf2_1, b=0, sel=i_sf2_zero, out=add_i_sf2_1)
mux(a=sum_i_sf2_2, b=0, sel=i_sf2_zero, out=add_i_sf2_2)
mux(a=sum_j_sf2_0, b=0, sel=j_sf2_zero, out=add_j_sf2_0)
mux(a=sum_j_sf2_1, b=0, sel=j_sf2_zero, out=add_j_sf2_1)
mux(a=sum_j_sf2_2, b=0, sel=j_sf2_zero, out=add_j_sf2_2)
mux(a=sum_k_sf2_0, b=0, sel=k_sf2_zero, out=add_k_sf2_0)
mux(a=sum_k_sf2_1, b=0, sel=k_sf2_zero, out=add_k_sf2_1)
mux(a=sum_k_sf2_2, b=0, sel=k_sf2_zero, out=add_k_sf2_2)
mux(a=sum_l_sf2_0, b=0, sel=l_sf2_zero, out=add_l_sf2_0)
mux(a=sum_l_sf2_1, b=0, sel=l_sf2_zero, out=add_l_sf2_1)
mux(a=sum_l_sf2_2, b=0, sel=l_sf2_zero, out=add_l_sf2_2)
mux(a=sum_m_sf2_0, b=0, sel=m_sf2_zero, out=add_m_sf2_0)
mux(a=sum_m_sf2_1, b=0, sel=m_sf2_zero, out=add_m_sf2_1)
mux(a=sum_m_sf2_2, b=0, sel=m_sf2_zero, out=add_m_sf2_2)
mux(a=sum_n_sf2_0, b=0, sel=n_sf2_zero, out=add_n_sf2_0)
mux(a=sum_n_sf2_1, b=0, sel=n_sf2_zero, out=add_n_sf2_1)
mux(a=sum_n_sf2_2, b=0, sel=n_sf2_zero, out=add_n_sf2_2)
mux(a=sum_o_sf2_0, b=0, sel=o_sf2_zero, out=add_o_sf2_0)
mux(a=sum_o_sf2_1, b=0, sel=o_sf2_zero, out=add_o_sf2_1)
mux(a=sum_o_sf2_2, b=0, sel=o_sf2_zero, out=add_o_sf2_2)
mux(a=sum_p_sf2_0, b=0, sel=p_sf2_zero, out=add_p_sf2_0)
mux(a=sum_p_sf2_1, b=0, sel=p_sf2_zero, out=add_p_sf2_1)
mux(a=sum_p_sf2_2, b=0, sel=p_sf2_zero, out=add_p_sf2_2)
mux(a=sum_q_sf2_0, b=0, sel=q_sf2_zero, out=add_q_sf2_0)
mux(a=sum_q_sf2_1, b=0, sel=q_sf2_zero, out=add_q_sf2_1)
mux(a=sum_q_sf2_2, b=0, sel=q_sf2_zero, out=add_q_sf2_2)
mux(a=sum_r_sf2_0, b=0, sel=r_sf2_zero, out=add_r_sf2_0)
mux(a=sum_r_sf2_1, b=0, sel=r_sf2_zero, out=add_r_sf2_1)
mux(a=sum_r_sf2_2, b=0, sel=r_sf2_zero, out=add_r_sf2_2)
mux(a=sum_s_sf2_0, b=0, sel=s_sf2_zero, out=add_s_sf2_0)
mux(a=sum_s_sf2_1, b=0, sel=s_sf2_zero, out=add_s_sf2_1)
mux(a=sum_s_sf2_2, b=0, sel=s_sf2_zero, out=add_s_sf2_2)
mux(a=sum_t_sf2_0, b=0, sel=t_sf2_zero, out=add_t_sf2_0)
mux(a=sum_t_sf2_1, b=0, sel=t_sf2_zero, out=add_t_sf2_1)
mux(a=sum_t_sf2_2, b=0, sel=t_sf2_zero, out=add_t_sf2_2)
mux(a=sum_u_sf2_0, b=0, sel=u_sf2_zero, out=add_u_sf2_0)
mux(a=sum_u_sf2_1, b=0, sel=u_sf2_zero, out=add_u_sf2_1)
mux(a=sum_u_sf2_2, b=0, sel=u_sf2_zero, out=add_u_sf2_2)
mux(a=sum_v_sf2_0, b=0, sel=v_sf2_zero, out=add_v_sf2_0)
mux(a=sum_v_sf2_1, b=0, sel=v_sf2_zero, out=add_v_sf2_1)
mux(a=sum_v_sf2_2, b=0, sel=v_sf2_zero, out=add_v_sf2_2)
mux(a=sum_w_sf2_0, b=0, sel=w_sf2_zero, out=add_w_sf2_0)
mux(a=sum_w_sf2_1, b=0, sel=w_sf2_zero, out=add_w_sf2_1)
mux(a=sum_w_sf2_2, b=0, sel=w_sf2_zero, out=add_w_sf2_2)
mux(a=sum_x_sf2_0, b=0, sel=x_sf2_zero, out=add_x_sf2_0)
mux(a=sum_x_sf2_1, b=0, sel=x_sf2_zero, out=add_x_sf2_1)
mux(a=sum_x_sf2_2, b=0, sel=x_sf2_zero, out=add_x_sf2_2)
mux(a=sum_y_sf2_0, b=0, sel=y_sf2_zero, out=add_y_sf2_0)
mux(a=sum_y_sf2_1, b=0, sel=y_sf2_zero, out=add_y_sf2_1)
mux(a=sum_y_sf2_2, b=0, sel=y_sf2_zero, out=add_y_sf2_2)
mux(a=sum_z_sf2_0, b=0, sel=z_sf2_zero, out=add_z_sf2_0)
mux(a=sum_z_sf2_1, b=0, sel=z_sf2_zero, out=add_z_sf2_1)
mux(a=sum_z_sf2_2, b=0, sel=z_sf2_zero, out=add_z_sf2_2)

#### Add the letter counts for each significant figure:

lookup_adder(
  a0=sum_a_sf1_0, a1=sum_a_sf1_1, a2=sum_a_sf1_2,
  b0=sum_b_sf1_0, b1=sum_b_sf1_1, b2=sum_b_sf1_2,
  c0=sum_c_sf1_0, c1=sum_c_sf1_1, c2=sum_c_sf1_2,
  d0=sum_d_sf1_0, d1=sum_d_sf1_1, d2=sum_d_sf1_2,
  e0=sum_e_sf1_0, e1=sum_e_sf1_1, e2=sum_e_sf1_2,
  f0=sum_f_sf1_0, f1=sum_f_sf1_1, f2=sum_f_sf1_2,
  g0=sum_g_sf1_0, g1=sum_g_sf1_1, g2=sum_g_sf1_2,
  h0=sum_h_sf1_0, h1=sum_h_sf1_1, h2=sum_h_sf1_2,
  i0=sum_i_sf1_0, i1=sum_i_sf1_1, i2=sum_i_sf1_2,
  j0=sum_j_sf1_0, j1=sum_j_sf1_1, j2=sum_j_sf1_2,
  k0=sum_k_sf1_0, k1=sum_k_sf1_1, k2=sum_k_sf1_2,
  l0=sum_l_sf1_0, l1=sum_l_sf1_1, l2=sum_l_sf1_2,
  m0=sum_m_sf1_0, m1=sum_m_sf1_1, m2=sum_m_sf1_2,
  n0=sum_n_sf1_0, n1=sum_n_sf1_1, n2=sum_n_sf1_2,
  o0=sum_o_sf1_0, o1=sum_o_sf1_1, o2=sum_o_sf1_2,
  p0=sum_p_sf1_0, p1=sum_p_sf1_1, p2=sum_p_sf1_2,
  q0=sum_q_sf1_0, q1=sum_q_sf1_1, q2=sum_q_sf1_2,
  r0=sum_r_sf1_0, r1=sum_r_sf1_1, r2=sum_r_sf1_2,
  s0=sum_s_sf1_0, s1=sum_s_sf1_1, s2=sum_s_sf1_2,
  t0=sum_t_sf1_0, t1=sum_t_sf1_1, t2=sum_t_sf1_2,
  u0=sum_u_sf1_0, u1=sum_u_sf1_1, u2=sum_u_sf1_2,
  v0=sum_v_sf1_0, v1=sum_v_sf1_1, v2=sum_v_sf1_2,
  w0=sum_w_sf1_0, w1=sum_w_sf1_1, w2=sum_w_sf1_2,
  x0=sum_x_sf1_0, x1=sum_x_sf1_1, x2=sum_x_sf1_2,
  y0=sum_y_sf1_0, y1=sum_y_sf1_1, y2=sum_y_sf1_2,
  z0=sum_z_sf1_0, z1=sum_z_sf1_1, z2=sum_z_sf1_2,

  sum0=sum_sf1_0, sum1=sum_sf1_1, sum2=sum_sf1_2, sum3=sum_sf1_3, sum4=sum_sf1_4, sum5=sum_sf1_5,
  sum6=sum_sf1_6, sum7=sum_sf1_7, sum8=sum_sf1_8, sum9=sum_sf1_9, sum10=sum_sf1_10, sum11=sum_sf1_11,

  carry=not_used_0
)

lookup_adder(
  a0=add_a_sf2_0, a1=add_a_sf2_1, a2=add_a_sf2_2,
  b0=add_b_sf2_0, b1=add_b_sf2_1, b2=add_b_sf2_2,
  c0=add_c_sf2_0, c1=add_c_sf2_1, c2=add_c_sf2_2,
  d0=add_d_sf2_0, d1=add_d_sf2_1, d2=add_d_sf2_2,
  e0=add_e_sf2_0, e1=add_e_sf2_1, e2=add_e_sf2_2,
  f0=add_f_sf2_0, f1=add_f_sf2_1, f2=add_f_sf2_2,
  g0=add_g_sf2_0, g1=add_g_sf2_1, g2=add_g_sf2_2,
  h0=add_h_sf2_0, h1=add_h_sf2_1, h2=add_h_sf2_2,
  i0=add_i_sf2_0, i1=add_i_sf2_1, i2=add_i_sf2_2,
  j0=add_j_sf2_0, j1=add_j_sf2_1, j2=add_j_sf2_2,
  k0=add_k_sf2_0, k1=add_k_sf2_1, k2=add_k_sf2_2,
  l0=add_l_sf2_0, l1=add_l_sf2_1, l2=add_l_sf2_2,
  m0=add_m_sf2_0, m1=add_m_sf2_1, m2=add_m_sf2_2,
  n0=add_n_sf2_0, n1=add_n_sf2_1, n2=add_n_sf2_2,
  o0=add_o_sf2_0, o1=add_o_sf2_1, o2=add_o_sf2_2,
  p0=add_p_sf2_0, p1=add_p_sf2_1, p2=add_p_sf2_2,
  q0=add_q_sf2_0, q1=add_q_sf2_1, q2=add_q_sf2_2,
  r0=add_r_sf2_0, r1=add_r_sf2_1, r2=add_r_sf2_2,
  s0=add_s_sf2_0, s1=add_s_sf2_1, s2=add_s_sf2_2,
  t0=add_t_sf2_0, t1=add_t_sf2_1, t2=add_t_sf2_2,
  u0=add_u_sf2_0, u1=add_u_sf2_1, u2=add_u_sf2_2,
  v0=add_v_sf2_0, v1=add_v_sf2_1, v2=add_v_sf2_2,
  w0=add_w_sf2_0, w1=add_w_sf2_1, w2=add_w_sf2_2,
  x0=add_x_sf2_0, x1=add_x_sf2_1, x2=add_x_sf2_2,
  y0=add_y_sf2_0, y1=add_y_sf2_1, y2=add_y_sf2_2,
  z0=add_z_sf2_0, z1=add_z_sf2_1, z2=add_z_sf2_2,

  sum0=sum_sf2_0, sum1=sum_sf2_1, sum2=sum_sf2_2, sum3=sum_sf2_3, sum4=sum_sf2_4, sum5=sum_sf2_5,
  sum6=sum_sf2_6, sum7=sum_sf2_7, sum8=sum_sf2_8, sum9=sum_sf2_9, sum10=sum_sf2_10, sum11=sum_sf2_11,

  carry=not_used_1
)

# Add the word "point" unless sf2 is zero:

not(in=a_sf2_zero, out=a_decimal_point)
not(in=b_sf2_zero, out=b_decimal_point)
not(in=c_sf2_zero, out=c_decimal_point)
not(in=d_sf2_zero, out=d_decimal_point)
not(in=e_sf2_zero, out=e_decimal_point)
not(in=f_sf2_zero, out=f_decimal_point)
not(in=g_sf2_zero, out=g_decimal_point)
not(in=h_sf2_zero, out=h_decimal_point)
not(in=i_sf2_zero, out=i_decimal_point)
not(in=j_sf2_zero, out=j_decimal_point)
not(in=k_sf2_zero, out=k_decimal_point)
not(in=l_sf2_zero, out=l_decimal_point)
not(in=m_sf2_zero, out=m_decimal_point)
not(in=n_sf2_zero, out=n_decimal_point)
not(in=o_sf2_zero, out=o_decimal_point)
not(in=p_sf2_zero, out=p_decimal_point)
not(in=q_sf2_zero, out=q_decimal_point)
not(in=r_sf2_zero, out=r_decimal_point)
not(in=s_sf2_zero, out=s_decimal_point)
not(in=t_sf2_zero, out=t_decimal_point)
not(in=u_sf2_zero, out=u_decimal_point)
not(in=v_sf2_zero, out=v_decimal_point)
not(in=w_sf2_zero, out=w_decimal_point)
not(in=x_sf2_zero, out=x_decimal_point)
not(in=y_sf2_zero, out=y_decimal_point)
not(in=z_sf2_zero, out=z_decimal_point)

# Add one for every number that has a decimal point:

add_6(
  a0=a_decimal_point, a1=0, a2=0, a3=0, a4=0, a5=0,
  b0=b_decimal_point, b1=0, b2=0, b3=0, b4=0, b5=0,
  o0=dps0_0, o1=dps0_1, o2=dps0_2, o3=dps0_3, o4=dps0_4, o5=dps0_5,
  carry=not_used_3
)

add_6(
  a0=dps0_0, a1=dps0_1, a2=dps0_2, a3=dps0_3, a4=dps0_4, a5=dps0_5,
  b0=c_decimal_point, b1=0, b2=0, b3=0, b4=0, b5=0,
  o0=dps1_0, o1=dps1_1, o2=dps1_2, o3=dps1_3, o4=dps1_4, o5=dps1_5,
  carry=not_used_4
)

add_6(
  a0=dps1_0, a1=dps1_1, a2=dps1_2, a3=dps1_3, a4=dps1_4, a5=dps1_5,
  b0=d_decimal_point, b1=0, b2=0, b3=0, b4=0, b5=0,
  o0=dps2_0, o1=dps2_1, o2=dps2_2, o3=dps2_3, o4=dps2_4, o5=dps2_5,
  carry=not_used_5
)

add_6(
  a0=dps2_0, a1=dps2_1, a2=dps2_2, a3=dps2_3, a4=dps2_4, a5=dps2_5,
  b0=e_decimal_point, b1=0, b2=0, b3=0, b4=0, b5=0,
  o0=dps3_0, o1=dps3_1, o2=dps3_2, o3=dps3_3, o4=dps3_4, o5=dps3_5,
  carry=not_used_6
)

add_6(
  a0=dps3_0, a1=dps3_1, a2=dps3_2, a3=dps3_3, a4=dps3_4, a5=dps3_5,
  b0=f_decimal_point, b1=0, b2=0, b3=0, b4=0, b5=0,
  o0=dps4_0, o1=dps4_1, o2=dps4_2, o3=dps4_3, o4=dps4_4, o5=dps4_5,
  carry=not_used_7
)

add_6(
  a0=dps4_0, a1=dps4_1, a2=dps4_2, a3=dps4_3, a4=dps4_4, a5=dps4_5,
  b0=g_decimal_point, b1=0, b2=0, b3=0, b4=0, b5=0,
  o0=dps5_0, o1=dps5_1, o2=dps5_2, o3=dps5_3, o4=dps5_4, o5=dps5_5,
  carry=not_used_8
)

add_6(
  a0=dps5_0, a1=dps5_1, a2=dps5_2, a3=dps5_3, a4=dps5_4, a5=dps5_5,
  b0=h_decimal_point, b1=0, b2=0, b3=0, b4=0, b5=0,
  o0=dps6_0, o1=dps6_1, o2=dps6_2, o3=dps6_3, o4=dps6_4, o5=dps6_5,
  carry=not_used_9
)

add_6(
  a0=dps6_0, a1=dps6_1, a2=dps6_2, a3=dps6_3, a4=dps6_4, a5=dps6_5,
  b0=i_decimal_point, b1=0, b2=0, b3=0, b4=0, b5=0,
  o0=dps7_0, o1=dps7_1, o2=dps7_2, o3=dps7_3, o4=dps7_4, o5=dps7_5,
  carry=not_used_10
)

add_6(
  a0=dps7_0, a1=dps7_1, a2=dps7_2, a3=dps7_3, a4=dps7_4, a5=dps7_5,
  b0=j_decimal_point, b1=0, b2=0, b3=0, b4=0, b5=0,
  o0=dps8_0, o1=dps8_1, o2=dps8_2, o3=dps8_3, o4=dps8_4, o5=dps8_5,
  carry=not_used_11
)

add_6(
  a0=dps8_0, a1=dps8_1, a2=dps8_2, a3=dps8_3, a4=dps8_4, a5=dps8_5,
  b0=k_decimal_point, b1=0, b2=0, b3=0, b4=0, b5=0,
  o0=dps9_0, o1=dps9_1, o2=dps9_2, o3=dps9_3, o4=dps9_4, o5=dps9_5,
  carry=not_used_12
)

add_6(
  a0=dps9_0, a1=dps9_1, a2=dps9_2, a3=dps9_3, a4=dps9_4, a5=dps9_5,
  b0=l_decimal_point, b1=0, b2=0, b3=0, b4=0, b5=0,
  o0=dps10_0, o1=dps10_1, o2=dps10_2, o3=dps10_3, o4=dps10_4, o5=dps10_5,
  carry=not_used_13
)

add_6(
  a0=dps10_0, a1=dps10_1, a2=dps10_2, a3=dps10_3, a4=dps10_4, a5=dps10_5,
  b0=m_decimal_point, b1=0, b2=0, b3=0, b4=0, b5=0,
  o0=dps11_0, o1=dps11_1, o2=dps11_2, o3=dps11_3, o4=dps11_4, o5=dps11_5,
  carry=not_used_14
)

add_6(
  a0=dps11_0, a1=dps11_1, a2=dps11_2, a3=dps11_3, a4=dps11_4, a5=dps11_5,
  b0=n_decimal_point, b1=0, b2=0, b3=0, b4=0, b5=0,
  o0=dps12_0, o1=dps12_1, o2=dps12_2, o3=dps12_3, o4=dps12_4, o5=dps12_5,
  carry=not_used_15
)

add_6(
  a0=dps12_0, a1=dps12_1, a2=dps12_2, a3=dps12_3, a4=dps12_4, a5=dps12_5,
  b0=o_decimal_point, b1=0, b2=0, b3=0, b4=0, b5=0,
  o0=dps13_0, o1=dps13_1, o2=dps13_2, o3=dps13_3, o4=dps13_4, o5=dps13_5,
  carry=not_used_16
)

add_6(
  a0=dps13_0, a1=dps13_1, a2=dps13_2, a3=dps13_3, a4=dps13_4, a5=dps13_5,
  b0=p_decimal_point, b1=0, b2=0, b3=0, b4=0, b5=0,
  o0=dps14_0, o1=dps14_1, o2=dps14_2, o3=dps14_3, o4=dps14_4, o5=dps14_5,
  carry=not_used_17
)

add_6(
  a0=dps14_0, a1=dps14_1, a2=dps14_2, a3=dps14_3, a4=dps14_4, a5=dps14_5,
  b0=q_decimal_point, b1=0, b2=0, b3=0, b4=0, b5=0,
  o0=dps15_0, o1=dps15_1, o2=dps15_2, o3=dps15_3, o4=dps15_4, o5=dps15_5,
  carry=not_used_18
)

add_6(
  a0=dps15_0, a1=dps15_1, a2=dps15_2, a3=dps15_3, a4=dps15_4, a5=dps15_5,
  b0=r_decimal_point, b1=0, b2=0, b3=0, b4=0, b5=0,
  o0=dps16_0, o1=dps16_1, o2=dps16_2, o3=dps16_3, o4=dps16_4, o5=dps16_5,
  carry=not_used_19
)

add_6(
  a0=dps16_0, a1=dps16_1, a2=dps16_2, a3=dps16_3, a4=dps16_4, a5=dps16_5,
  b0=s_decimal_point, b1=0, b2=0, b3=0, b4=0, b5=0,
  o0=dps17_0, o1=dps17_1, o2=dps17_2, o3=dps17_3, o4=dps17_4, o5=dps17_5,
  carry=not_used_20
)

add_6(
  a0=dps17_0, a1=dps17_1, a2=dps17_2, a3=dps17_3, a4=dps17_4, a5=dps17_5,
  b0=t_decimal_point, b1=0, b2=0, b3=0, b4=0, b5=0,
  o0=dps18_0, o1=dps18_1, o2=dps18_2, o3=dps18_3, o4=dps18_4, o5=dps18_5,
  carry=not_used_21
)

add_6(
  a0=dps18_0, a1=dps18_1, a2=dps18_2, a3=dps18_3, a4=dps18_4, a5=dps18_5,
  b0=u_decimal_point, b1=0, b2=0, b3=0, b4=0, b5=0,
  o0=dps19_0, o1=dps19_1, o2=dps19_2, o3=dps19_3, o4=dps19_4, o5=dps19_5,
  carry=not_used_22
)

add_6(
  a0=dps19_0, a1=dps19_1, a2=dps19_2, a3=dps19_3, a4=dps19_4, a5=dps19_5,
  b0=v_decimal_point, b1=0, b2=0, b3=0, b4=0, b5=0,
  o0=dps20_0, o1=dps20_1, o2=dps20_2, o3=dps20_3, o4=dps20_4, o5=dps20_5,
  carry=not_used_23
)

add_6(
  a0=dps20_0, a1=dps20_1, a2=dps20_2, a3=dps20_3, a4=dps20_4, a5=dps20_5,
  b0=w_decimal_point, b1=0, b2=0, b3=0, b4=0, b5=0,
  o0=dps21_0, o1=dps21_1, o2=dps21_2, o3=dps21_3, o4=dps21_4, o5=dps21_5,
  carry=not_used_24
)

add_6(
  a0=dps21_0, a1=dps21_1, a2=dps21_2, a3=dps21_3, a4=dps21_4, a5=dps21_5,
  b0=x_decimal_point, b1=0, b2=0, b3=0, b4=0, b5=0,
  o0=dps22_0, o1=dps22_1, o2=dps22_2, o3=dps22_3, o4=dps22_4, o5=dps22_5,
  carry=not_used_25
)

add_6(
  a0=dps22_0, a1=dps22_1, a2=dps22_2, a3=dps22_3, a4=dps22_4, a5=dps22_5,
  b0=y_decimal_point, b1=0, b2=0, b3=0, b4=0, b5=0,
  o0=dps23_0, o1=dps23_1, o2=dps23_2, o3=dps23_3, o4=dps23_4, o5=dps23_5,
  carry=not_used_26
)

add_6(
  a0=dps23_0, a1=dps23_1, a2=dps23_2, a3=dps23_3, a4=dps23_4, a5=dps23_5,
  b0=z_decimal_point, b1=0, b2=0, b3=0, b4=0, b5=0,
  o0=decimals0, o1=decimals1, o2=decimals2, o3=decimals3, o4=decimals4, o5=decimals5,
  carry=not_used_27
)

# Add decimal point count if this chip is one of { p, o, i, n, t }:
# FINDME: swap 'sel' depending on which chip this is.

mux(a=decimals0, b=0, sel=1, out=sum_point_0)
mux(a=decimals1, b=0, sel=1, out=sum_point_1)
mux(a=decimals2, b=0, sel=1, out=sum_point_2)
mux(a=decimals3, b=0, sel=1, out=sum_point_3)
mux(a=decimals4, b=0, sel=1, out=sum_point_4)
mux(a=decimals5, b=0, sel=1, out=sum_point_5)

# Add the sums together:

add_12(
  a0=sum_sf1_0, a1=sum_sf1_1, a2=sum_sf1_2, a3=sum_sf1_3, a4=sum_sf1_4, a5=sum_sf1_5,
  a6=sum_sf1_6, a7=sum_sf1_7, a8=sum_sf1_8, a9=sum_sf1_9, a10=sum_sf1_10, a11=sum_sf1_11,

  b0=sum_sf2_0, b1=sum_sf2_1, b2=sum_sf2_2, b3=sum_sf2_3, b4=sum_sf2_4, b5=sum_sf2_5,
  b6=sum_sf2_6, b7=sum_sf2_7, b8=sum_sf2_8, b9=sum_sf2_9, b10=sum_sf2_10, b11=sum_sf2_11,

  o0=sum_x_0, o1=sum_x_1, o2=sum_x_2, o3=sum_x_3, o4=sum_x_4, o5=sum_x_5,
  o6=sum_x_6, o7=sum_x_7, o8=sum_x_8, o9=sum_x_9, o10=sum_x_10, o11=sum_x_11,

  carry=not_used_28
)

add_12(
  a0=sum_x_0, a1=sum_x_1, a2=sum_x_2, a3=sum_x_3, a4=sum_x_4, a5=sum_x_5,
  a6=sum_x_6, a7=sum_x_7, a8=sum_x_8, a9=sum_x_9, a10=sum_x_10, a11=sum_x_11,

  b0=sum_point_0, b1=sum_point_1, b2=sum_point_2, b3=sum_point_3, b4=sum_point_4, b5=sum_point_5,
  b6=0, b7=0, b8=0, b9=0, b10=0, b11=0,

  o0=sum0, o1=sum1, o2=sum2, o3=sum3, o4=sum4, o5=sum5,
  o6=sum6, o7=sum7, o8=sum8, o9=sum9, o10=sum10, o11=sum11,

  carry=not_used_29
)
